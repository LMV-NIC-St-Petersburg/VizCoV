setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path), "/examples", sep=""))
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path), "/examples", sep=""))
paste(dirname(rstudioapi::getActiveDocumentContext()$path), "/examples", sep="")
setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path), "/examples", sep=""))
setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path), "/example", sep=""))
library("tidyverse")
data_folder <- "/example"
input_filenames <- c("Crimea_gisaid_hcov-19_2024_08_09_09.tsv", "Russia_gisaid_hcov-19_2024_08_09_09.tsv")
picture_filename <- "SARS_Russia_2024"
picture_width <- 1280
picture_height <- 1024
lineage_legend_title <- "Линия PANGO"
year <- "2024"
groups <- list(c('LB.1', 'KU.2', 'LT.1', 'KR.1', 'KR.3', 'KS.1', 'LM.1', 'LN.1.1', 'LR.27 LR.1', 'JN.1.18.3', 'JN.1.18.4', 'JN.1.18.5', 'JN.1.18.6', 'LZ.1', 'LQ.1', 'JN.1.48.1', 'JN.1.48.3', 'JN.1.39.1', 'JN.1.56.1', 'LE.1.1', 'LE.1.3.1', 'JQ.2.1.1', 'LV.2', 'MD.3.1', 'MD.2', 'KP.1.1', 'KP.2', 'КР.4.1', 'КР.4.2', 'LA.2', 'LA.1', 'JN.1.16.1', 'KZ.1.1', 'JN.1.50.1', 'ME.1', 'LU.1', 'LU.2'),
c('JN.1.16.3', 'КР.1.2', 'KP.5', 'XDK.3.1', 'XDK.3.5', 'XDK.3.6', 'XDK.4.1', 'XDK.4.5', 'XDK.4.6', 'XDD.3', 'JN.1.7.4', 'JN.1.7.8', 'JN.1.7.9', 'JN.1.65.1', 'KW.1.1'),
c('MB.1', 'MA.1', 'КР.1.1.3', 'KP.2.7', 'KP.2.14', 'KP.2.15', 'KP.2.3', 'KP.4.1.3', 'KP.4.2.1', 'LF.1.1.1', 'LF.2', 'LF.4.1', 'MJ.1')
)
group_names <- c('FLiRT', 'FLiTI', 'FLiRT31')
supergroup_name <- 'FLiRT'
percent_treshold_to_label = .05
percent_treshold_to_draw = .05
count_treshold_to_draw = 5
########
setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path), data_folder, sep=""))
df_list <- list()
for (i in 1:length(input_filenames)) {
input <- read_tsv(input_filenames[i],
name_repair = janitor::make_clean_names)
input$lineage <- gsub('(consensus call)', '', input$lineage)
input <- input %>% mutate(lineage = str_replace_all(lineage, "\\*|\\(|\\)", ""))
input$lineage <- gsub(' ', '', input$lineage)
df_list <- append(df_list, list(input))
}
df_list
data <- bind_rows(df_list)
dates_from <- paste(year,"-01-01", sep="") # set to something like year 1900 if no start needed
dates_untill <- paste(year,"-12-31", sep="") # set to something like year 2100 if no end needed
data_yearly <- data %>%
filter(collection_date >= as_date(dates_from)) %>%
filter(collection_date <= as_date(dates_untill))
data_grouped <- data
for (i in 1:length(groups)){
data_grouped <- data_grouped %>% mutate(lineage = ifelse(lineage %in% groups[[i]], group_names[i], lineage))
}
data_grouped <- data_grouped %>% mutate(lineage = ifelse(lineage %in% group_names, lineage, paste("Not", supergroup_name)))
data_grouped_binary <- data_grouped %>% mutate(lineage = ifelse(lineage == paste("Not", supergroup_name), lineage, supergroup_name))
plotting_fun <- function(data_yearly) {
lineage_month_count <- data_yearly %>%
mutate(Month = substr(collection_date, 1, 7)) %>%
count(lineage, Month) %>%
summarise(Count = sum(n),
.by = c(lineage, Month)) %>%
mutate(Percentage = Count / sum(Count), .by = Month)
distingushed_lineages <- c(intersect(
unique(lineage_month_count$lineage[lineage_month_count$Count >= count_treshold_to_draw]),
unique(lineage_month_count$lineage[lineage_month_count$Percentage >= percent_treshold_to_draw])), c("Другое"))
set.seed(12313)
P36 <- Polychrome::createPalette(length(distingushed_lineages),  c("#20B2AA", "#440A7F"), prefix = NULL) %>% unname()
plot_data <- lineage_month_count %>%
mutate(lineage = ifelse(lineage %in% distingushed_lineages, lineage, "Другое")) %>%
summarise(
Count = sum(Count),
.by = c(lineage, Month)
) %>%
mutate(Percentage = Count / sum(Count), .by = Month)
p <- plot_data %>%
ggplot(aes(x = Month, y = Percentage, fill = lineage)) +
geom_col(position = "fill") +
geom_text(
aes(x = Month,
y = Percentage,
label = if_else(Percentage >= percent_treshold_to_label,
paste0(signif(Percentage * 100, 2), " ", "%"),
NA)),
position = "fill",
size = 5,
vjust = 1.2,
inherit.aes = TRUE
) +
geom_text(
data = plot_data %>% summarise(n = sum(Count), .by = c(Month)),
aes(x = Month,
y = n,
label = n),
size = 5,
vjust = -1,
stat = "identity",
position = "fill",
inherit.aes = FALSE
) +
scale_fill_manual(values = P36) +
scale_y_continuous(labels = scales::label_percent()) +
labs(x = "Месяц",
y = "Доля образцов") +
guides(fill = guide_legend(title = lineage_legend_title)) +
theme_classic() +
theme(axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
return(p)
}
p <- plotting_fun(data_yearly = data_yearly)
p %>% show()
png(paste(picture_filename, ".png", sep=""), width = picture_width, height = picture_height)
print(p)
dev.off()
p <- plotting_fun(data_yearly = data_grouped)
p %>% show()
png(paste(picture_filename, "_grouped.png", sep=""), width = picture_width, height = picture_height)
print(p)
dev.off()
p <- plotting_fun(data_yearly = data_grouped_binary)
p %>% show()
png(paste(picture_filename, "_grouped_binary.png", sep=""), width = picture_width, height = picture_height)
print(p)
dev.off()
if (!require("tidyverse", quietly = TRUE) == FALSE) {
message("Installing the 'tidyverse' package")
install.packages("tidyverse")
}
install.packages("tidyverse")
if (!require("tidyverse", quietly = TRUE) == FALSE) {
message("Installing the 'tidyverse' package")
install.packages("tidyverse")
}
if (!require("tidyverse")) {
message("Installing the 'tidyverse' package")
install.packages("tidyverse")
}
if (!require(tidyverse)) {
message("Installing the 'tidyverse' package")
install.packages("tidyverse")
}
if (require(tidyverse)) {
message("Installing the 'tidyverse' package")
install.packages("tidyverse")
}
detach("package:stats", unload = TRUE)
library(stats)
